<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="RESULT">
	<select id="getAllResults" resultClass="result.ResultVO">
		select 
			game_no			as gameNo,
			myteam			as myTeamNo,	
			my_runs			as myRuns,
			my_hits			as myHits,
			my_error		as myError,
			my_balls		as myBalls,
			rivalteam		as rivalTeamNo,
			rival_runs		as rivalRuns,
			rival_hits		as rivalHits,
			rival_error		as rivalError,
			rival_balls		as rivalBalls,
			game_date		as gameDate
		from hg_gameresult	
	</select>
	
	<!-- 모든 경기결과가 저장된 DB 테이블에서 전달받은 팀번호와 myteam 번호, rivalteam 번호가 일치하는 값을 읽어오기 -->
	<select id="getResultByNo" parameterClass="hashmap" resultClass="result.ResultVO">
		select 
			game_no			as gameNo,
			myteam			as myTeamNo,	
			my_runs			as myRuns,
			my_hits			as myHits,
			my_error		as myError,
			my_balls		as myBalls,
			rivalteam		as rivalTeamNo,
			rival_runs		as rivalRuns,
			rival_hits		as rivalHits,
			rival_error		as rivalError,
			rival_balls		as rivalBalls,
			game_date		as gameDate
		
		from (select row_number() over(order by game_no desc) as num, game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, RIVAL_BALLS, GAME_DATE      
      	      from (select game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date
              		from hg_gameresult
              		where myteam = #teamNo#
              		and delete_y_n = 'N'
              		union
              		select game_no, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, myteam, my_runs, my_hits, my_error, my_balls, game_date   
              		from hg_gameresult
              		where rivalteam = #teamNo#
              		and delete_y_n = 'N'))
		
		where game_no = #no#
	</select>
	
	<!-- 팀명 전달받아 팀번호 얻기  -->
	<select id="getResultTeamNoByName" parameterClass="string" resultClass="int">
		select 
			team_no
		from hg_team
		where team_name = #value#	
	</select>
	
	<!-- 팀번호 전달하여 팀명 얻기 -->
 	<select id="getTeamNameByNo" parameterClass="int" resultClass="string">
		select 
			team_name
		from hg_team
		where team_no = #value#
	</select> 
	
	<!-- 경기결과 저장하기 -->
	<insert id="saveResult" parameterClass="result.ResultVO">
		insert into hg_gameresult(game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date)
		values(GAME_NO_SEQ.nextval, #myTeamNo#, #myRuns#, #myHits#, #myError#, #myBalls#, #rivalTeamNo#, #rivalRuns#, #rivalHits#, #rivalError#, #rivalBalls#, sysdate)
	</insert>
	
	<!-- 해당팀의 전체 경기횟수(테이블의 전체 행) -->
	<select id="getTotal" parameterClass="int" resultClass="int">
		select count(*) cnt
		
		from (select row_number() over(order by game_no desc) as num, game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date      
      	      from (select game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date
              		from hg_gameresult
              		where myteam = #teamNo#
              		and delete_y_n = 'N'
              		union
              		select game_no, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, myteam, my_runs, my_hits, my_error, my_balls, game_date   
              		from hg_gameresult
              		where rivalteam = #teamNo#
              		and delete_y_n = 'N')) 
	</select>
	
	<!-- 구간을 전달받아 전달받은 구간의 경기결과 얻어오기 -->
	<select id="getResultByRange" parameterClass="hashmap" resultClass="result.ResultVO">
		<![CDATA[
		select 
      
			game_no			as gameNo,
			myteam			as myTeamNo,	
			my_runs			as myRuns,
			my_hits			as myHits,
			my_error		as myError,
			my_balls		as myBalls,
			rivalteam		as rivalTeamNo,
			rival_runs		as rivalRuns,
			rival_hits		as rivalHits,
			rival_error		as rivalError,
			rival_balls		as rivalBalls,
			game_date		as gameDate
		
		from (select row_number() over(order by game_no desc) as num, game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date      
      		  from (select game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date
                    from hg_gameresult
            		where myteam = #teamNo#
            		and delete_y_n = 'N'
		            union
		            select game_no, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, myteam, my_runs, my_hits, my_error, my_balls, game_date   
		            from hg_gameresult
		            where rivalteam = #teamNo#
		            and delete_y_n = 'N'))
		
		where num >= #start# and num <= #end#
		order by num
		]]>
		
	</select>
	
	<!-- 경기결과 삭제하기(실제로는 삭제여부 컬럼에 구분표시'Y'로 바꾸기) -->
	<update id="deleteResultByNo" parameterClass="int">
		update hg_gameresult
		set 
			delete_y_n = 'Y'
		where game_no = #gameNo#	
	</update>
	
	<!-- 댓글 저장하기 -->
	<insert id="saveReply" parameterClass="result.ResultReplyVO">
		insert into hg_gameresult_comment(g_c_no, g_c_contents, member_no, team_no, game_no, g_c_date)
		values(g_c_no_seq.nextval, #contents#, #memNo#, #teamNo#, #gameNo#, sysdate)
	</insert>
	
	<!-- 경기결과에 달려있는 댓글들 읽어오기 -->
	<select id="getReplyBygameNo" parameterClass="int" resultClass="result.ResultReplyVO">
		select
			gr.g_c_no			as commentNo,
			gr.g_c_contents		as contents,
			gr.team_no			as teamNo,
			gr.game_no			as gameNo,
			gr.member_no		as memNo,
			m.member_id			as memId,
			gr.g_c_date			as gameDate
		from hg_gameresult_comment gr, hg_member m
		where gr.member_no = m.member_no
		and gr.game_no = #value#
		order by gr.g_c_no 
	</select>
	
	<!-- 댓글 DB의 댓글지우기 -->
	<delete id="deleteReplyByNo" parameterClass="int">
		delete from hg_gameresult_comment
		where g_c_no = #value#
	</delete>
	
	<!-- 경기결과 디테일 업데이트 하기 -->
	<update id="updateResult" parameterClass="hashmap">
		update hg_gameresult
		set
			game_no = #no#, 
			my_runs = #myRuns#, 
			my_hits = #myHits#, 
			my_error = #myError#, 
			my_balls = #myBalls#, 
			rival_runs = #rivalRuns#, 
			rival_hits = #rivalHits#, 
			rival_error = #rivalError#, 
			rival_balls = #rivalBalls#
		where game_no = #no#
	</update>
	
	<!-- 상대팀 이름 읽어오기 -->
	<select id="getAllTeamName" parameterClass="int" resultClass="string">
		select 
			team_name
		from hg_team
		where team_no != #value#	
	</select>
	
	<!-- 팀넘버값 주고 팀코치번호 얻기  -->
	<select id="getCoachNoByTeamNo" parameterClass="int" resultClass="int">
		select 
			team_coach_no
		from hg_team 
		where team_no = #value#	
	</select>
	
	<!-- 해당팀의 최근 5경기결과 읽어오기 -->
	<select id="getResultByTeamNo" parameterClass="int" resultClass="result.ResultVO">
	<![CDATA[
		select 
      		game_no			as gameNo,
			myteam			as myTeamNo,	
			my_runs			as myRuns,
			my_hits			as myHits,
			my_error		as myError,
			my_balls		as myBalls,
			rivalteam		as rivalTeamNo,
			rival_runs		as rivalRuns,
			rival_hits		as rivalHits,
			rival_error		as rivalError,
			rival_balls		as rivalBalls,
			game_date		as gameDate
			
		from (select row_number() over(order by game_no desc) as num, game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date      
      		  from (select game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date
            	  	from hg_gameresult
            	  	where myteam = #teamNo#
            	  	and delete_y_n = 'N'
            	  	union
            	  	select game_no, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, myteam, my_runs, my_hits, my_error, my_balls, game_date   
            	  	from hg_gameresult
            	  	where rivalteam = #teamNo#
            	  	and delete_y_n = 'N'))
            	  	
		where num > 0 and num < 6
		order by num		
		]]>
	</select>
	
	<!-- 팀번호 전달받아 해당팀의 승 횟수 얻기 -->
	<select id="getWinCntByTeamNo" parameterClass="int" resultClass="int">
		<![CDATA[
		select count(*)
		from (select row_number() over(order by game_no desc) as num, game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date      
      		  from (select game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date
            		from hg_gameresult
            		where myteam = #teamNo#
            		and delete_y_n = 'N'
            		union
            		select game_no, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, myteam, my_runs, my_hits, my_error, my_balls, game_date   
		            from hg_gameresult
		            where rivalteam = #teamNo#
		            and delete_y_n = 'N'))
		            
		where my_runs > rival_runs
		]]>
	</select>
	
	<!-- 팀번호 전달받아 해당팀의 패 횟수 얻기 -->
	<select id="getLoseCntByTeamNo" parameterClass="int" resultClass="int">
		<![CDATA[
		select count(*)
		
		from (select row_number() over(order by game_no desc) as num, game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date      
      		  from (select game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date
            		from hg_gameresult
		            where myteam = #teamNo#
		            and delete_y_n = 'N'
		            union
		            select game_no, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, myteam, my_runs, my_hits, my_error, my_balls, game_date   
		            from hg_gameresult
		            where rivalteam = #teamNo#
		            and delete_y_n = 'N'))
		            
		where my_runs < rival_runs
		]]>
	
	</select>
		
	<!-- 팀번호 전달받아 해당팀의 타이기록 횟수 얻기 -->	
	<select id="getTieCntByTeamNo" parameterClass="int" resultClass="int">
		<![CDATA[
		select count(*)
		from (select row_number() over(order by game_no desc) as num, game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date      
      		  from (select game_no, myteam, my_runs, my_hits, my_error, my_balls, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, game_date
            		from hg_gameresult
		            where myteam = #teamNo#
		            and delete_y_n = 'N'
		            union
		            select game_no, rivalteam, rival_runs, rival_hits, rival_error, rival_balls, myteam, my_runs, my_hits, my_error, my_balls, game_date   
		            from hg_gameresult
		            where rivalteam = #teamNo#
		            and delete_y_n = 'N'))
            
		where my_runs = rival_runs
		]]>
	</select>
	
	<!-- 게임번호에 해당하는 글의 댓글 총 숫자 얻기 -->
	
	<select id="getTotalReplyCnt" parameterClass="int" resultClass="int">
	select	count(*)
		from hg_gameresult_comment
		where game_no = #value#
	</select>
	
	<!-- 게임번호, 구간을 전달받아 특정 구간의 댓글들 읽어오기 -->
	<select id="getReplyByRange" parameterClass="hashmap" resultClass="result.ResultReplyVO">
		<![CDATA[
		select 
			g_c_no as commentNo,
			g_c_contents  as contents,
			team_no  as teamNo,
			game_no  as gameNo,
			member_no  as memNo,
			member_id  as memId,
			g_c_date  as gameDate
		
		from (select row_number() over(order by gr.g_c_no) as num, gr.g_c_no,  gr.g_c_contents,	gr.team_no, gr.game_no, gr.member_no, m.member_id, gr.g_c_date			
			  from hg_gameresult_comment gr, hg_member m
			  where gr.member_no = m.member_no
			  and gr.game_no = #gameNo#)
		where num >= #start# and num =< #end#
		]]>
	</select>
	
	
	
	
</sqlMap>